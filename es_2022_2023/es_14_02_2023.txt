//{[(17 * 2) – 4] / 3} – [(9 – 7) * 4] + {[(5 + 3) * 2] – (3 * 4)}
//10-8+4
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <sys/types.h>
#include <unistd.h>

int main(void) {
  pid_t pid1, pid2, pid3;
  int ris1, ris2, ris3, rist, stato;
  pid1 = fork();
  if(pid1>0){
    //padre figlio 1
    pid2= fork();
    if(pid2>0){
      pid3=fork();
      if(pid3>0){
        //risultato
        int l= 3*4;
        pid3 = waitpid(pid3, &stato, 0 );
        int g = WEXITSTATUS(stato);
        //printf("g = %d", g);
        ris3= g-l;
        printf("nipote figlio 2 = %d\n", ris3);
        pid2 = waitpid(pid2, &stato, 0 );
        ris2 = WEXITSTATUS(stato);
        //printf("ris2 = %d", ris2);
        //int ris2_3= ris2+ris3;
        pid1 = waitpid(pid1, &stato, 0 );
        ris1 = WEXITSTATUS(stato);
        //printf("ris1 = %d", ris1);
        rist= (ris1-ris2)+ris3;
        printf("\nil risultato è: %d", rist);
        exit(0);
      }
      else{
        //figlio 3-->{[(5 + 3) * 2] }
        int f= 5+3;
        int g= f*2;
        //printf("\nnipote figlio 2 = %d\n", g); corretto
        exit(g);
      }
    }
    else{
      //figlio 2-->[(9 – 7) * 4]
      int d= 9-7;
      ris2 = d*4;
      printf("figlio 2 = %d\n",ris2);
      exit(ris2);
    }
  }
  else{
    //figlio 1-->{[(17 * 2) – 4] / 3}
    int a= 17*2;
    int b=a-4;
    ris1=b/3;
    printf("figlio 1 = %d\n",ris1);
    exit(ris1);
  }
  return 0;
}